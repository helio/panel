# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  code:
    docker:
    - image: circleci/php:7.2-fpm-node-browsers

    working_directory: ~/repo

    steps:
    - checkout

    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
        - v1-dependencies-{{ checksum "composer.json" }}-
        - v1-dependencies--{{ checksum "package.json" }}
        - v1-dependencies-

    - run: sudo docker-php-ext-install pdo_mysql && sudo docker-php-ext-enable pdo_mysql
    - run: composer install -n -q -o
    - run: yarn
    - run: if ! [[ -d vendor/apt ]]; then mkdir -p vendor/apt; fi
    - run: if [[ ! -e /usr/bin/rsync ]]; then if ! [[ -d vendor/apt/archives ]]; then sudo apt-get install --download-only rsync && sudo cp -R /var/cache/apt vendor/ && sudo chown -R circleci:circleci vendor/apt; fi; sudo dpkg -i vendor/apt/archives/*.deb; fi

    - save_cache:
        paths:
        - ./vendor
        - ~/.cache/yarn
        key: v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}

    - run: composer run test

    # remove dev packages
    - run: composer install -o -n -q --prefer-dist --no-dev

    - run:
        name: deploy
        command: |
          export DEPLOY_USERNAME=panelpreview
          if [[ "${CIRCLE_BRANCH}" = 'master' ]]; then DEPLOY_USERNAME=panelproto; fi
          mkdir ~/.ssh || rm -f ~/.ssh/known_hosts
          mv ./.circleci/known_hosts ~/.ssh/
          rsync -rptgoDzL --delete src www bin cli-config.php composer.* ${DEPLOY_USERNAME}@nbf01.opsserver.ch:.
          rsync -rptgoDzL cnf ${DEPLOY_USERNAME}@nbf01.opsserver.ch:.
          ssh ${DEPLOY_USERNAME}@nbf01.opsserver.ch "source .zshrc;
          source .profile;
          composer install --no-dev -o &&
          crontab cnf/crontab
          vendor/bin/doctrine orm:schema-tool:update --force &&
          vendor/bin/doctrine orm:generate-proxies -q /home/${DEPLOY_USERNAME}/tmp"
          sleep 5
          ssh ${DEPLOY_USERNAME}@nbf01.opsserver.ch "sudo /usr/sbin/service php72-fpm reload"
          if [[ "${CIRCLE_BRANCH}" = 'master' ]]; then ssh docker@nbf01.opsserver.ch "wget -qO swagger/src/dockerdispatch.json 'https://panel.idling.host/apidoc?format=json'"; fi


  runners:
    docker:
    - image: docker:17.05.0-ce-git

    working_directory: ~/repo

    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build application Docker image
        command: |
          docker login -u panel -p ${GITLAB_TOKEN} gitlab.idling.host:4567
          START_DIR="$(pwd -P)"
          for img in $(find src -name Dockerfile); do
            cd "${START_DIR}/$(dirname $img)"
            IMGNAME=gitlab.idling.host:4567/helio/runner/$(echo $(basename $(dirname $img)) | tr '[:upper:]' '[:lower:]')
            TAGNAME=$(echo ${CIRCLE_BRANCH} | tr '/' '_')
            docker build -t ${IMGNAME}:${TAGNAME} . && docker push "${IMGNAME}:${TAGNAME}"
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag "${IMGNAME}:${TAGNAME}" "${IMGNAME}:latest" && docker push "${IMGNAME}:latest"
            fi
          done

  functional:
    docker:
    - image: everpeace/curl-jq

    steps:
    - checkout
    - run:
        name: Functional Test on PROD
        command: ./.circleci/test.sh


workflows:
  version: 2
  build:
    jobs:
    - code:
        filters:
          branches:
            only:
            - master
            - development
    - runners:
        filters:
          branches:
            only:
            - master
            - development

  functest:
    triggers:
      - schedule:
          cron: "11 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
    - functional
